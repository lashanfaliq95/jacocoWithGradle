
/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.4.1/userguide/java_library_plugin.html
 */


group 'testGradle'
version '1.0-SNAPSHOT'

buildscript {


    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.10.RELEASE")
    }
}


apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'
apply plugin: 'application'

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
}


import javax.management.remote.JMXServiceURL as JmxUrl
 import javax.management.remote.JMXConnectorFactory as JmxFactory

mainClassName = "hello.TestCoverageExampleApplication"

run {
    jvmArgs "-javaagent:/home/lashanf/jacoco-0.8.4/lib/jacocoagent.jar=destfile=testIntegration.exec,output=file,append=true,jmx=true"
    jvmArgs "-Dcom.sun.management.jmxremote"
    jvmArgs "-Dcom.sun.management.jmxremote.port=5999"
    jvmArgs "-Dcom.sun.management.jmxremote.local.only=false"
    jvmArgs "-Dcom.sun.management.jmxremote.authenticate=false"
    jvmArgs "-Dcom.sun.management.jmxremote.ssl=false"
    jvmArgs "-Dcom.sun.management.jmxremote.rmi.port=5998"
}

jacoco {
    toolVersion = '0.8.4'
}



task copyJacocoAgent(type: Copy) {
    println configurations.jacocoAgent

    configurations.jacocoAgent.asFileTree.each {
        from(zipTree(it))
    }

    into "${rootDir}/build/jacoco"
}
task dumpJacoco{
    doLast {
        def serverUrl = 'service:jmx:rmi:///jndi/rmi://localhost:5999/jmxrmi'
        String beanName = "org.jacoco:type=Runtime"
        def server = JmxFactory.connect(new JmxUrl(serverUrl)).MBeanServerConnection
        def gmxb = new GroovyMBean(server, beanName)

        println "Connected to:\n$gmxb\n"
        println "Executing dump()"
        gmxb.dump(true)
    }
}

jacocoTestReport {
    dependsOn dumpJacoco
    group = "Reporting"
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/reports/coverage")
    }
    executionData = files("JACOCO_EXEC_FILE")
}

sourceCompatibility = 1.8


